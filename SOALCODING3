// 1.
===========
eMoneySplit
===========
[INSTRUCTIONS]
eMoneySplit adalah sebuah fungsi yang menerima parameter berupa string
dan akan mengembalikkan nilai string yang merupakan jumlah terbanyak dan terdikit.

[EXAMPLE]
INPUT: "bagus:200000,ali:20000,bagas:300000,andre:50000"
OUTPUT: terbanyak adalah bagas dan terdikit adalah andre

[NOTES]
1. Apabila tidak ada data tampilkan "tidak ada catatan eMoney"

[RULES]
1. WAJIB menggunakan algoritma/pseudocode atau -50 poin
*/

function eMoneySplit(stringData) {

}

//  Pseudocode 
//  let STORE strData equal stringdata
 
 //console.log(eMoneySplit('bagus:200000,ali:20000,bagas:300000,andre:50000'))
 // terbanyak adalah bagas dan terdikit adalah andre
 //console.log(eMoneySplit('andre:50000'))
 // terbanyak adalah andre dan terdikit adalah andre
 //console.log(eMoneySplit(''))
 // tidak ada catatan eMoney
 
 // 2. /*
========
warOfFun
========
[INSTRUCTIONS]
warOfFun adalah sebuat fungsi yang menerima parameter berupa string dan
akan mengembalikkan nilai string yang merupakan pemenang perlombaan.

[EXAMPLE]
INPUT: [
  ['andre', 'toni', 'toti'],
  ['risk', 'fun', 'go'],
  ['humble', 'psyhco', 'strong']
]

PROCESS: 
1. array[0] akan berisi nama-nama pemain
2. array-aray pada indeks berikutnya akan berisi attribut-attribut yang dimiliki oleh setiap pemain sesuai dengan indeksnya
3. pada array[1] andre tidak memiliki fun, toni memiliki 1 fun, dan toti tidak memiliki fun
4. pada array[2] andre tidak memiliki fun, toni tidak memiliki fun, dan toti tidak memiliki fun.
5. total andre tidak memiliki fun, toni memiliki 1 fun, dan toti tidak memiliki fun, sehingga pemenangnya adalah toni.

OUTPUT: pemenangnya adalah toni

[NOTES]
  1. Apabila tidak ada pemenang tampilkan "mohon maaf tidak ada pemenangnya"
  2. Asumsi tidak akan ada yang seri tapi tidak selalu ada pemenangnya

[RULES]
  1. Dilarang menggunakan built in function .sort()
*/

function warOfFun(informations) {

}

// console.log(warOfFun([
//   ['andre', 'toni', 'toti'],
//   ['risk', 'fun', 'go'],
//   ['humble', 'psyhco', 'strong']
// ]))
// // pemenangnya adalah toni

//  console.log(warOfFun([
//   ['andre', 'toni', 'toti', 'tito'],
//   ['fun', 'fun', 'fun'],
//   ['fun', 'fun'],
//   ['nonfun', 'fun', 'fun', 'fun']
//  ]))
// // pemenangnya adalah toni

//  console.log(warOfFun([
//    ['andre', 'toni'],
//    ['risk', 'go'],
//    ['humble', 'strong']
//  ]))
// // mohon maaf tidak ada pemenangnya

//  console.log(warOfFun([]))
// // mohon maaf tidak ada pemenangnya

// 3. /*
===========
lotusRealms
===========
[INSTRUCTIONS]
lotusRealms adalah sebuah fungsi yang menerima parameter berupa array
of objects dan akan mengembalikkan info siapa saja yang akan bertahan dari perang.

[EXAMPLE]
INPUT: [
  { clan: 'Serpent', attack: 'Samurai', totalAttack: 300, totalHealth: 1000 },
  { clan: 'Samurai', attack: 'Wolf', totalAttack: 400, totalHealth: 500 },
  { clan: 'Wolf', attack: 'Serpent', totalAttack: 300, totalHealth: 600 },
  { clan: 'Lotus', attack: 'Wolf', totalAttack: 2000, totalHealth: 3000 }
]
PROCESS: 
  1. Serpent menyerang Samurai sebesar 300 => health Samurai menjadi 200
  2. Samurai menyerang Wolf sebasar 400 => health Wolf menjadi 200
  3. Wolf menyerang Serpent sebesar 300 => health Serpent menjadi 700
  4. Lotus menyerang Wolf sebsar 2000 => health Wolf menjadi -1800 dan Wolf gugur dalam realms
OUTPUT: [
  { clan: 'Serpent', totalHealth: 700 },
  { clan: 'Samurai', totalHealth: 200 },
  { clan: 'Lotus', totalHealth: 3000 }
]

[RULES]
  1. Diasumsikan pemenang akan selalu ada, dan clans tidak pernah kosong.
  2. Dilarang menggunakan built in function .filter(), .map(), .forEach(), dan .reduce()
*/

function lotusRealms(clans) {
  // code here
  
}

// console.log(lotusRealms([
//   { clan: 'Serpent', attack: 'Samurai', totalAttack: 300, totalHealth: 1000 },
//   { clan: 'Samurai', attack: 'Wolf', totalAttack: 400, totalHealth: 500 },
//   { clan: 'Wolf', attack: 'Serpent', totalAttack: 300, totalHealth: 600 },
//   { clan: 'Lotus', attack: 'Wolf', totalAttack: 2000, totalHealth: 3000 }
// ]))
// /*
//   [
//     { clan: 'Serpent', totalHealth: 700 },
//     { clan: 'Samurai', totalHealth: 200 },
//     { clan: 'Lotus', totalHealth: 3000 }
//   ]
// */

// console.log(lotusRealms([
//   { clan: 'Wolf', attack: 'Wolf', totalAttack: 300, totalHealth: 600 },
//   { clan: 'Lotus', attack: 'Wolf', totalAttack: 2000, totalHealth: 3000 }
// ]))
// /*
//  [ { clan: 'Lotus', totalHealth: 3000 } ]  
